h_cm = 20
W1_stroke_mm = 30
W1_freq_Hz = 0.5
T12 = 2
T34 = 1
# Use root-solver function to find the k values for the different waves
W1_k = 2.3209
W2_k = 2.3209
W3_k = 5.17913
W4_k = 5.17913
# lambda = 2*pi/k
W1_lmbda = 2*pi/W1_k
W2_lmbda = 2*pi/W2_k
W3_lmbda = 2*pi/W3_k
W4_lmbda = 2*pi/W4_k
# D/lambda to check slender body assumption
D = 0.0508
W1_Dl = D/W1_lmbda
W2_Dl = D/W2_lmbda
W3_Dl = D/W3_lmbda
W4_Dl = D/W4_lmbda
### 3. Calculate the Reynolds number for each wave
W1_a = 0.013
W2_a = 0.003
W3_a = 0.012
W4_a = 0.003
# Find sigma using sigma = 2*pi/T
W1_sig = 2*pi/T12
W2_sig = 2*pi/T12
W3_sig = 2*pi/T34
W4_sig = 2*pi/T34
# Find Cp using Cp = sigma/k
W1_Cp = W1_sig/W1_k
W2_Cp = W2_sig/W2_k
W3_Cp = W3_sig/W3_k
W4_Cp = W4_sig/W4_k
# Find u using u = a*k*Cp
W1_u = W1_a * W1_k * W1_Cp
W2_u = W2_a * W2_k * W2_Cp
W3_u = W3_a * W3_k * W3_Cp
W4_u = W4_a * W4_k * W4_Cp
# Find Reynolds number using Re = u*D/v
v = 1.003*10^-6
W1_Re = W1_u * D/v
W2_Re = W2_u * D/v
W3_Re = W3_u * D/v
W4_Re = W4_u * D/v
### 4. Find Cd and Cm for each wave case
# To find Cd, first find local maxima of Fd timeseries and take average to find Fd average
Lab4_W1$Force_newtons_max = Lab4_W1$Force_newtons - 0.12
mean(Lab4_W1[["Force_newtons_max"]])
Lab4_W1$Force_newtons_max[Lab4_W1$Force_newtons_max<0] <- 0
mean(Lab4_W1$Force_newtons_max)
mean =mean(Lab4_W1$Force_newtons_max)
mean(Lab4_W1$time_s)
mean(Lab4_W1$Force_newtons)
plot(Lab4_W1$time_s[0:1000], Lab4_W1$Force_newtons[0:1000], ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
plot(Lab4_W1$time_s, Lab4_W1$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
Fd = 0.2
rho_kg/m3 = 1000
rho_kg_m3 = 1000
Cd = -4*W1_Fd/(h*rho_kg_m3*D*W1_u*abs(W1_u))
W1_Fd = 0.2
Cd = -4*W1_Fd/(h*rho_kg_m3*D*W1_u*abs(W1_u))
rho_g_cm3 = 1
# To find Cd, first find local maxima of Fd timeseries and take average to find Fd average
# At du/dt = 0, Ftot = Fd, which means that at the wave peak, the entire force is equal to the drag force
# The average of the maxima are around 0.2, so
W1_Fd = 0.2
# Then, u can be solved for using u = a*k*Cp*cos(k*x-sigma*t)
# Fd = integral(-L,0)(0.5*rho*D*Cd*u*abs(u))dz
# Fd = -h/2(0.5*rho*D*Cd*u*abs(u))
# Cd = -4*Fd/(h*rho*D*Cd*u*abs(u))
Cd = -4*W1_Fd/(h)cm*rho_g_cm3*D*W1_u*abs(W1_u))
Cd = -4*W1_Fd/h_cm*rho_g_cm3*D*W1_u*abs(W1_u))
Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*W1_u*abs(W1_u))
Lab4_W2 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W2.csv")
Lab4_W3 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W3.csv")
Lab4_W4 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W4.csv")
Lab4_W2$time_s = as.numeric(Lab4_W2$time_s)
Lab4_W2$Force_newtons = as.numeric(Lab4_W2$Force_newtons)
Lab4_W3$time_s = as.numeric(Lab4_W3$time_s)
Lab4_W3$Force_newtons = as.numeric(Lab4_W3$Force_newtons)
Lab4_W4$time_s = as.numeric(Lab4_W4$time_s)
Lab4_W4$Force_newtons = as.numeric(Lab4_W4$Force_newtons)
Lab4_W2$time_s = (Lab4_W2$time_s) - (Lab4_W2$time_s[1])
Lab4_W3$time_s = (Lab4_W3$time_s) - (Lab4_W3$time_s[1])
Lab4_W4$time_s = (Lab4_W4$time_s) - (Lab4_W4$time_s[1])
plot(Lab4_W2$time_s, Lab4_W2$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
plot(Lab4_W3$time_s, Lab4_W3$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
plot(Lab4_W4$time_s, Lab4_W4$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
plot(Lab4_W2$time_s, Lab4_W2$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 2")
plot(Lab4_W3$time_s, Lab4_W3$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 3")
Lab4_W4$time_s = (Lab4_W4$time_s) - (Lab4_W4$time_s[1])
plot(Lab4_W4$time_s, Lab4_W4$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 4")
W2_Cd = -4*W2_Fd/(h_cm*rho_g_cm3*D*W2_u*abs(W1_u))
W3_Cd = -4*W3_Fd/(h_cm*rho_g_cm3*D*W3_u*abs(W1_u))
W4_Cd = -4*W4_Fd/(h_cm*rho_g_cm3*D*W4_u*abs(W1_u))
W1_Fd = 0.2
W2_Fd = 0.018
W3_Fd = 0.35
W4_Fd = 0.07
# Then, u can be solved for using u = a*k*Cp*cos(k*x-sigma*t)
# Fd = integral(-L,0)(0.5*rho*D*Cd*u*abs(u))dz
# Fd = -h/2(0.5*rho*D*Cd*u*abs(u))
# Cd = -4*Fd/(h*rho*D*Cd*u*abs(u))
W1_Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*W1_u*abs(W1_u))
W2_Cd = -4*W2_Fd/(h_cm*rho_g_cm3*D*W2_u*abs(W1_u))
W3_Cd = -4*W3_Fd/(h_cm*rho_g_cm3*D*W3_u*abs(W1_u))
W4_Cd = -4*W4_Fd/(h_cm*rho_g_cm3*D*W4_u*abs(W1_u))
W1_Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*(W1_u)^2*cos(W1_sig*0)*abs(cos(W1_sig*0)))
W1_Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*(W1_u)^2*cos(W1_sig*0)*abs(cos(W1_sig*0)))
plot(Lab4_W1$time_s, Lab4_W1$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
plot(Lab4_W1$time_s, Lab4_W1$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
W1_Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*(W1_u)^2*cos(W1_sig*1)*abs(cos(W1_sig*1)))
W1_Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*(W1_u)^2*cos(W1_sig*0.4)*abs(cos(W1_sig*0.4)))
W1_Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*(W1_u)^2*cos(W1_sig*0)*abs(cos(W1_sig*0)))
W1_Cd = 2*W1_Fd/(rho_g_cm3*D*(W1_u)*abs(W1_u))
W1_Cd = 3*pi*W1_a/4*rho_g_cm3*D
W1_Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*(W1_u)^2*cos(W1_sig*0)*abs(cos(W1_sig*0)))
library(zoo)
# Read in data for Wave 1
Lab4_W1 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W1.csv")
Lab4_W2 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W2.csv")
Lab4_W3 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W3.csv")
Lab4_W4 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W4.csv")
# Convert everything to numeric values
Lab4_W1$time_s = as.numeric(Lab4_W1$time_s)
Lab4_W1$Force_newtons = as.numeric(Lab4_W1$Force_newtons)
Lab4_W2$time_s = as.numeric(Lab4_W2$time_s)
Lab4_W2$Force_newtons = as.numeric(Lab4_W2$Force_newtons)
Lab4_W3$time_s = as.numeric(Lab4_W3$time_s)
Lab4_W3$Force_newtons = as.numeric(Lab4_W3$Force_newtons)
Lab4_W4$time_s = as.numeric(Lab4_W4$time_s)
Lab4_W4$Force_newtons = as.numeric(Lab4_W4$Force_newtons)
# Reset the time series so it starts at 0 seconds
Lab4_W1$time_s = (Lab4_W1$time_s) - (Lab4_W1$time_s[1])
Lab4_W2$time_s = (Lab4_W2$time_s) - (Lab4_W2$time_s[1])
Lab4_W3$time_s = (Lab4_W3$time_s) - (Lab4_W3$time_s[1])
Lab4_W4$time_s = (Lab4_W4$time_s) - (Lab4_W4$time_s[1])
### 1. Plot the Wave Case 1 condition of force vs. time
plot(Lab4_W1$time_s, Lab4_W1$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
plot(Lab4_W1$time_s[0:1000], Lab4_W1$Force_newtons[0:1000], ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
# Plot Wave Case 2, 3, and 4 to determine the average maxima
plot(Lab4_W2$time_s, Lab4_W2$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 2")
plot(Lab4_W3$time_s, Lab4_W3$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 3")
plot(Lab4_W4$time_s, Lab4_W4$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 4")
### 2. Calculate D/lambda for each wave case and compare with slender body assumption
# Calculate lambda using the dispersion relationship
# sigma^2 = gktanh(kh)
# T = 1/freq
h_cm = 20
W1_freq_Hz = 0.5
T12 = 2
T34 = 1
# Use root-solver function to find the k values for the different waves
W1_k = 2.3209
W2_k = 2.3209
W3_k = 5.17913
W4_k = 5.17913
# lambda = 2*pi/k
W1_lmbda = 2*pi/W1_k
W2_lmbda = 2*pi/W2_k
W3_lmbda = 2*pi/W3_k
W4_lmbda = 2*pi/W4_k
# D/lambda to check slender body assumption
D = 0.0508
W1_Dl = D/W1_lmbda
W2_Dl = D/W2_lmbda
W3_Dl = D/W3_lmbda
W4_Dl = D/W4_lmbda
### 3. Calculate the Reynolds number for each wave
W1_a = 0.013
W2_a = 0.003
W3_a = 0.012
W4_a = 0.003
# Find sigma using sigma = 2*pi/T
W1_sig = 2*pi/T12
W2_sig = 2*pi/T12
W3_sig = 2*pi/T34
W4_sig = 2*pi/T34
# Find Cp using Cp = sigma/k
W1_Cp = W1_sig/W1_k
W2_Cp = W2_sig/W2_k
W3_Cp = W3_sig/W3_k
W4_Cp = W4_sig/W4_k
# Find u using u = a*k*Cp
W1_u = W1_a * W1_k * W1_Cp
W2_u = W2_a * W2_k * W2_Cp
W3_u = W3_a * W3_k * W3_Cp
W4_u = W4_a * W4_k * W4_Cp
# Find Reynolds number using Re = u*D/v
v = 1.003*10^-6
W1_Re = W1_u * D/v
W2_Re = W2_u * D/v
W3_Re = W3_u * D/v
W4_Re = W4_u * D/v
### 4. Find Cd and Cm for each wave case
rho_g_cm3 = 1
# To find Cd, first find local maxima of Fd timeseries and take average to find Fd average
# At du/dt = 0, Ftot = Fd, which means that at the wave peak, the entire force is equal to the drag force
# The average of the maxima are around 0.2, so
W1_Fd = 0.2
W2_Fd = 0.018
W3_Fd = 0.35
W4_Fd = 0.07
# Then, u can be solved for using u = a*k*Cp*cos(k*x-sigma*t)
# Fd = integral(-L,0)(0.5*rho*D*Cd*u*abs(u))dz
# Fd = -h/2(0.5*rho*D*Cd*u*abs(u))
# Cd = -4*Fd/(h*rho*D*Cd*u*abs(u))
W1_Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*(W1_u)^2*cos(W1_sig*0)*abs(cos(W1_sig*0)))
W1_Cd = 2*W1_Fd/(rho_g_cm3*D*(W1_u)*abs(W1_u))
W1_Cd = 3*pi*W1_a/4*rho_g_cm3*D
W2_Cd = -4*W2_Fd/(h_cm*rho_g_cm3*D*W2_u*abs(W1_u))
W3_Cd = -4*W3_Fd/(h_cm*rho_g_cm3*D*W3_u*abs(W1_u))
W4_Cd = -4*W4_Fd/(h_cm*rho_g_cm3*D*W4_u*abs(W1_u))
g_cm = .0981 # cm^2/s
# Use root-solver function to find the k values for the different waves
W1_k = 2.3209
W2_k = 2.3209
W3_k = 5.17913
W4_k = 5.17913
# lambda = 2*pi/k
W1_lmbda = 2*pi/W1_k
W2_lmbda = 2*pi/W2_k
W3_lmbda = 2*pi/W3_k
W4_lmbda = 2*pi/W4_k
# D/lambda to check slender body assumption
D = 0.0508
W1_Dl = D/W1_lmbda
W2_Dl = D/W2_lmbda
W3_Dl = D/W3_lmbda
W4_Dl = D/W4_lmbda
### 3. Calculate the Reynolds number for each wave
W1_a = 0.013
W2_a = 0.003
W3_a = 0.012
W4_a = 0.003
# Find sigma using sigma = 2*pi/T
W1_sig = 2*pi/T12
W2_sig = 2*pi/T12
W3_sig = 2*pi/T34
W4_sig = 2*pi/T34
# Find Cp using Cp = sigma/k
W1_Cp = W1_sig/W1_k
W2_Cp = W2_sig/W2_k
W3_Cp = W3_sig/W3_k
W4_Cp = W4_sig/W4_k
# Find u using u = g*a*k/sigma
W1_u = g_cm * W1_a * W1_k / W1_sig
W2_u = g_cm * W2_a * W2_k / W2_sig
W3_u = g_cm * W3_a * W3_k / W3_sig
W4_u = g_cm * W4_a * W4_k / W4_sig
# Find Reynolds number using Re = u*D/v
v = 1.003*10^-6
W1_Re = W1_u * D/v
W2_Re = W2_u * D/v
W3_Re = W3_u * D/v
W4_Re = W4_u * D/v
### 4. Find Cd and Cm for each wave case
rho_g_cm3 = 1
# To find Cd, first find local maxima of Fd timeseries and take average to find Fd average
# At du/dt = 0, Ftot = Fd, which means that at the wave peak, the entire force is equal to the drag force
# The average of the maxima are around 0.2, so
W1_Fd = 0.2
W2_Fd = 0.018
W3_Fd = 0.35
W4_Fd = 0.07
# Then, u can be solved for using u = a*k*Cp*cos(k*x-sigma*t)
# Fd = integral(-L,0)(0.5*rho*D*Cd*u*abs(u))dz
# Fd = -h/2(0.5*rho*D*Cd*u*abs(u))
# Cd = -4*Fd/(h*rho*D*Cd*u*abs(u))
W1_Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*(W1_u)^2*cos(W1_sig*0)*abs(cos(W1_sig*0)))
W1_Cd = 2*W1_Fd/(rho_g_cm3*D*(W1_u)*abs(W1_u))
W1_Cd = 3*pi*W1_a/4*rho_g_cm3*D
W2_Cd = -4*W2_Fd/(h_cm*rho_g_cm3*D*W2_u*abs(W1_u))
W3_Cd = -4*W3_Fd/(h_cm*rho_g_cm3*D*W3_u*abs(W1_u))
W4_Cd = -4*W4_Fd/(h_cm*rho_g_cm3*D*W4_u*abs(W1_u))
# T = 1/freq
h_m = 0.2
W1_freq_Hz = 0.5
T12 = 2
T34 = 1
g_m = 9.81 # m/s^2
# Use root-solver function to find the k values for the different waves
W1_k = 2.3209 # 1/m
W2_k = 2.3209
W3_k = 5.17913
W4_k = 5.17913
# lambda = 2*pi/k #m
W1_lmbda = 2*pi/W1_k
W2_lmbda = 2*pi/W2_k
W3_lmbda = 2*pi/W3_k
W4_lmbda = 2*pi/W4_k
# D/lambda to check slender body assumption
D = 0.0508 #m
W1_Dl = D/W1_lmbda
W2_Dl = D/W2_lmbda
W3_Dl = D/W3_lmbda
W4_Dl = D/W4_lmbda
### 3. Calculate the Reynolds number for each wave
W1_a = 0.013 #m
W2_a = 0.003
W3_a = 0.012
W4_a = 0.003
# Find sigma using sigma = 2*pi/T
W1_sig = 2*pi/T12 # 1/s
W2_sig = 2*pi/T12
W3_sig = 2*pi/T34
W4_sig = 2*pi/T34
# likely don't need
# Find Cp using Cp = sigma/k
W1_Cp = W1_sig/W1_k
W2_Cp = W2_sig/W2_k
W3_Cp = W3_sig/W3_k
W4_Cp = W4_sig/W4_k
# Find u using u = g*a*k/sigma
W1_u = g_m * W1_a * W1_k / W1_sig
W2_u = g_m * W2_a * W2_k / W2_sig
W3_u = g_m * W3_a * W3_k / W3_sig
W4_u = g_m * W4_a * W4_k / W4_sig
W1_Re = W1_u * D/v
W2_Re = W2_u * D/v
W3_Re = W3_u * D/v
W4_Re = W4_u * D/v
rho_kg_m3 = 1000
# To find Cd, first find local maxima of Fd timeseries and take average to find Fd average
# At du/dt = 0, Ftot = Fd, which means that at the wave peak, the entire force is equal to the drag force
# The average of the maxima are around 0.2, so
W1_Fd = 0.2
W2_Fd = 0.018
W3_Fd = 0.35
W4_Fd = 0.07
# Then, u can be solved for using u = a*k*Cp*cos(k*x-sigma*t)
# Fd = integral(-L,0)(0.5*rho*D*Cd*u*abs(u))dz
# Fd = -h/2(0.5*rho*D*Cd*u*abs(u))
# Cd = -4*Fd/(h*rho*D*Cd*u*abs(u))
W1_Cd = -4*W1_Fd/(h_cm*rho_g_cm3*D*(W1_u)^2*cos(W1_sig*0)*abs(cos(W1_sig*0)))
W1_Cd = 2*W1_Fd/(rho_g_cm3*D*(W1_u)*abs(W1_u))
W1_Cd = 3*pi*W1_a/4*rho_g_cm3*D
W2_Cd = -4*W2_Fd/(h_cm*rho_g_cm3*D*W2_u*abs(W1_u))
W3_Cd = -4*W3_Fd/(h_cm*rho_g_cm3*D*W3_u*abs(W1_u))
W4_Cd = -4*W4_Fd/(h_cm*rho_g_cm3*D*W4_u*abs(W1_u))
W2_Cd = -4*W2_Fd/(h_cm*rho_kg_m3*D*W2_u*abs(W1_u))
W3_Cd = -4*W3_Fd/(h_cm*rho_kg_m3*D*W3_u*abs(W1_u))
W4_Cd = -4*W4_Fd/(h_cm*rho_kg_m3*D*W4_u*abs(W1_u))
W1_Cd = 2* W1_Fd/(rho_kg_m3*(pi*(D/2)^2)*(W1_u)^2)
W1_Cd = 2* W1_Fd/(rho_kg_m3*(pi*(D/2)^2)*(W1_u)^2)
W2_Cd = 2* W2_Fd/(rho_kg_m3*(pi*(D/2)^2)*(W2_u)^2)
W3_Cd = 2* W3_Fd/(rho_kg_m3*(pi*(D/2)^2)*(W3_u)^2)
W4_Cd = 2* W4_Fd/(rho_kg_m3*(pi*(D/2)^2)*(W4_u)^2)
setwd("~/github/Coastal_Engineering/Lab 4")
library(zoo)
# Read in data for Wave 1
Lab4_W1 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W1.csv")
Lab4_W2 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W2.csv")
Lab4_W3 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W3.csv")
Lab4_W4 <- read.csv("~/github/Coastal_Engineering/Lab 4/Lab4_W4.csv")
# add 0.019s to force transducer time signal
# Convert everything to numeric values
Lab4_W1$time_s = as.numeric(Lab4_W1$time_s)
Lab4_W1$Force_newtons = as.numeric(Lab4_W1$Force_newtons)
Lab4_W2$time_s = as.numeric(Lab4_W2$time_s)
Lab4_W2$Force_newtons = as.numeric(Lab4_W2$Force_newtons)
Lab4_W3$time_s = as.numeric(Lab4_W3$time_s)
Lab4_W3$Force_newtons = as.numeric(Lab4_W3$Force_newtons)
Lab4_W4$time_s = as.numeric(Lab4_W4$time_s)
Lab4_W4$Force_newtons = as.numeric(Lab4_W4$Force_newtons)
# Reset the time series so it starts at 0 seconds
# correction factor
cf_per1 = 0.19 #s
cf_per05 = 0.17 #s
Lab4_W1$time_s = (Lab4_W1$time_s) - (Lab4_W1$time_s[1]) + cf_per05
Lab4_W2$time_s = (Lab4_W2$time_s) - (Lab4_W2$time_s[1]) + cf_per05
Lab4_W3$time_s = (Lab4_W3$time_s) - (Lab4_W3$time_s[1]) + cf_per1
Lab4_W4$time_s = (Lab4_W4$time_s) - (Lab4_W4$time_s[1]) + cf_per1
### 1. Plot the Wave Case 1 condition of force vs. time
plot(Lab4_W1$time_s, Lab4_W1$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
plot(Lab4_W1$time_s[0:1000], Lab4_W1$Force_newtons[0:1000], ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
# Plot Wave Case 2, 3, and 4 to determine the average maxima
plot(Lab4_W2$time_s, Lab4_W2$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 2")
plot(Lab4_W3$time_s, Lab4_W3$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 3")
plot(Lab4_W4$time_s, Lab4_W4$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 4")
### 2. Calculate D/lambda for each wave case and compare with slender body assumption
# Calculate lambda using the dispersion relationship
# sigma^2 = gktanh(kh)
# T = 1/freq
h_m = 0.2
W1_freq_Hz = 0.5
T12 = 2
T34 = 1
g_m = 9.81 # m/s^2
# Use root-solver function to find the k values for the different waves
W1_k = 2.3209 # 1/m
W2_k = 2.3209
W3_k = 5.17913
W4_k = 5.17913
# lambda = 2*pi/k #m
W1_lmbda = 2*pi/W1_k
W2_lmbda = 2*pi/W2_k
W3_lmbda = 2*pi/W3_k
W4_lmbda = 2*pi/W4_k
# D/lambda to check slender body assumption
D = 0.0508 #m
W1_Dl = D/W1_lmbda
W2_Dl = D/W2_lmbda
W3_Dl = D/W3_lmbda
W4_Dl = D/W4_lmbda
### 3. Calculate the Reynolds number for each wave
W1_a = 0.013 #m
W2_a = 0.003
W3_a = 0.012
W4_a = 0.003
# Find sigma using sigma = 2*pi/T
W1_sig = 2*pi/T12 # 1/s
W2_sig = 2*pi/T12
W3_sig = 2*pi/T34
W4_sig = 2*pi/T34
# Find u using u = g*a*k/sigma
# or use sigma k
#shallow water wave assume velocity constant with depth
W1_u = g_m * W1_a * W1_k / W1_sig
W2_u = g_m * W2_a * W2_k / W2_sig
W3_u = g_m * W3_a * W3_k / W3_sig
W4_u = g_m * W4_a * W4_k / W4_sig
# Find Reynolds number using Re = u*D/v
v = 1*10^-6 #m^2/s
W1_Re = W1_u * D/v
W2_Re = W2_u * D/v
W3_Re = W3_u * D/v
W4_Re = W4_u * D/v
### 4. Find Cd and Cm for each wave case
rho_kg_m3 = 1000
# To find Cd, first find local maxima of Fd timeseries and take average to find Fd average
# At du/dt = 0, Ftot = Fd, which means that at the wave peak, the entire force is equal to the drag force
# The average of the maxima are around 0.2, so
###############################################################
# take top 10% and bottom 10% and average them
###############################################################
W1_Fd = 0.2
W2_Fd = 0.018
W3_Fd = 0.35
W4_Fd = 0.07
# Cd = 2*Fd/(rho*A*u^2), from Dean and Dalrymple page 224
L = 0.2 #m
W1_Cd = 2* W1_Fd/(rho_kg_m3*(D*L)*(W1_u)^2)
W2_Cd = 2* W2_Fd/(rho_kg_m3*(D*L)*(W2_u)^2)
W3_Cd = 2* W3_Fd/(rho_kg_m3*(D*L)*(W3_u)^2)
W4_Cd = 2* W4_Fd/(rho_kg_m3*(D*L)*(W4_u)^2)
# for 1 hz wave, need the phase data, t = 0 is a crest and it is a cosine wave
# still use shallow water form of u and take temporal derivative of that
# u = a*sigma*cos(kx-sigmat)
# du/dt = a*sigma*(sigma*sin(sigma*t))
# use t at t = (1/4)T, because that is the time that the wave passes through the zero point and u = 0
t_12 = (1/4)*T12
t_34 = (1/4)*T34
der_u1 = W1_a * W1_sig^2 * sin(W1_sig*t_12)
der_u2 = W2_a * W2_sig^2 * sin(W2_sig*t_12)
der_u3 = W3_a * W3_sig^2 * sin(W3_sig*t_12)
der_u4 = W4_a * W4_sig^2 * sin(W4_sig*t_12)
plot(Lab4_W1$time_s[0:1000], Lab4_W1$Force_newtons[0:1000], ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
plot(Lab4_W2$time_s[0:1000], Lab4_W2$Force_newtons[0:1000], ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
plot(Lab4_W3$time_s[0:1000], Lab4_W3$Force_newtons[0:1000], ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
plot(Lab4_W4$time_s[0:1000], Lab4_W4$Force_newtons[0:1000], ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
W1_Fi = 0.02
W2_Fi = 0.005
W3_Fi = 0.003
W4_Fi = 0.03
W1_Cm = (W1_Fi*2*4)/(L*rho_kg_m3*pi*(D^2)*der_u1)
W2_Cm = (W2_Fi*2*4)/(L*rho_kg_m3*pi*(D^2)*der_u2)
W3_Cm = (W3_Fi*2*4)/(L*rho_kg_m3*pi*(D^2)*der_u3)
W4_Cm = (W4_Fi*2*4)/(L*rho_kg_m3*pi*(D^2)*der_u4)
W1_Fi = 0.02
W2_Fi = 0.005
W3_Fi = 0.03
W4_Fi = 0.003
# Cm = (Fi*2*4)/(L*rho*pi()*D^2*(du/dt))
W1_Cm = (W1_Fi*2*4)/(L*rho_kg_m3*pi*(D^2)*der_u1)
W2_Cm = (W2_Fi*2*4)/(L*rho_kg_m3*pi*(D^2)*der_u2)
W3_Cm = (W3_Fi*2*4)/(L*rho_kg_m3*pi*(D^2)*der_u3)
W4_Cm = (W4_Fi*2*4)/(L*rho_kg_m3*pi*(D^2)*der_u4)
W1_KC = (W1_u * T12) / D
W2_KC = (W2_u * T12) / D
W3_KC = (W3_u * T34) / D
W4_KC = (W4_u * T34) / D
W1_Cd = 4.44
W2_Cd = 7.5
W3_Cd = 7.32
W4_Cd = 23.4
Cd = c(W1_Cd, W2_Cd, W3_Cd, W4_Cd)
Cm = c(W1_Cm, W2_Cm, W3_Cm, W4_Cm)
KC = c(W1_KC, W2_KC, W3_KC, W4_KC)
plot(KC, Cd)
plot(KC, Cm)
W1_Cm = 0.79
W2_Cm = 0.86
W3_Cm = 0.323
W4_Cm = 0.129
Cm = c(W1_Cm, W2_Cm, W3_Cm, W4_Cm)
plot(KC, Cm)
plot(KC, Cd)
points(KC, Cm, pch = '21')
plot(KC, Cd)
points(KC, Cm, pch = '20')
points(KC, Cm, col = "red")
plot(KC, Cd)
points(KC, Cm, col = "red")
plot(KC, Cm)
plot(KC, Cd)
plot(Lab4_W1$time_s, Lab4_W1$Force_newtons, ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
Lab4_W4$Force_newtons = as.numeric(Lab4_W4$Force_newtons)
plot(Lab4_W1$time_s[0:1000], Lab4_W1$Force_newtons[0:1000], ylab = "Force (N)", xlab = "Time (s)", main = "Wave Case 1")
